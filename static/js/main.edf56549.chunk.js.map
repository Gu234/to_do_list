{"version":3,"sources":["components/Task.js","components/ToDoList.js","App.js","index.js"],"names":["className","onChange","props","toggleTask","id","type","this","task","onClick","removeTask","Component","state","newTaskName","tasks","handleChange","e","setState","target","name","value","addTask","newTask","isDone","Date","now","map","filter","clearDoneTasks","placeholder","key","length","App","ReactDOM","render","document","getElementById"],"mappings":"8cAIc,IAAD,OACL,OAAO,yBAAKA,UAAU,QAClB,6BACI,2BAAOC,SAAU,kBAAM,EAAKC,MAAMC,WAAW,EAAKD,MAAME,KACpDC,KAAK,aAET,8BAAOC,KAAKJ,MAAMK,OAEtB,4BACIP,UAAU,cACVQ,QAAS,kBAAM,EAAKN,MAAMO,WAAW,EAAKP,MAAME,MAFpD,U,GAViBM,a,6MCEzBC,MAAQ,CACJC,YAAa,GACbC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlCC,QAAU,WACN,GAA+B,KAA3B,EAAKT,MAAMC,YAAf,CACA,IAAMS,EAAU,CACZH,KAAM,EAAKP,MAAMC,YACjBU,QAAQ,EACRlB,GAAImB,KAAKC,OAEb,EAAKR,SAAS,CACVH,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAwBQ,IAC7BT,YAAa,O,EAIrBT,WAAa,SAAAC,GACT,EAAKY,SAAS,CACVH,MAAO,EAAKF,MAAME,MAAMY,KAAI,SAAClB,GAGzB,OAFIH,IAAOG,EAAKH,KACZG,EAAKe,QAAUf,EAAKe,QACjBf,Q,EAKnBE,WAAa,SAAAL,GAAE,OAAI,EAAKY,SAAS,CAC7BH,MAAO,EAAKF,MAAME,MAAMa,QAAO,SAACnB,GAAD,OAAUA,EAAKH,KAAOA,Q,EAGzDuB,eAAiB,WACb,EAAKX,SAAS,CACVH,MAAO,EAAKF,MAAME,MAAMa,QAAO,SAAAnB,GAAI,OAAKA,EAAKe,a,wEAI3C,IAAD,OACL,OAAO,6BACH,yBAAKtB,UAAU,QACX,2BACIA,UAAU,uBACVkB,KAAK,cACLC,MAAOb,KAAKK,MAAMC,YAClBgB,YAAY,eACZvB,KAAK,OACLJ,SAAUK,KAAKQ,eAInB,4BAAQd,UAAU,cAAcQ,QAASF,KAAKc,SAA9C,MAEJ,yBAAKpB,UAAU,kBAAkBM,KAAKK,MAAME,MAAMY,KAAI,SAAClB,GAAD,OAAU,kBAAC,EAAD,CAC5DJ,WAAY,EAAKA,WACjBM,WAAY,EAAKA,WACjBoB,IAAKtB,EAAKH,GACVA,GAAIG,EAAKH,GACTG,KAAMA,EAAKW,WACf,yBAAKlB,UAAU,QACX,2CAAiBM,KAAKK,MAAME,MAAMa,QAAO,SAAAnB,GAAI,OAAKA,EAAKe,UAAQQ,QAC/D,4BAAQtB,QAASF,KAAKqB,gBAAtB,+B,GApEajB,a,MCUdqB,MATf,WACE,OAAO,yBAAK/B,UAAU,aACpB,yBAAKA,UAAU,YACb,0CACA,kBAAC,EAAD,SCHNgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.edf56549.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class extends Component {\n\n    render() {\n        return <div className='line'>\n            <div>\n                <input onChange={() => this.props.toggleTask(this.props.id)}\n                    type=\"checkbox\"\n                />\n                <span>{this.props.task}</span>\n            </div>\n            <button\n                className='leftButtons'\n                onClick={() => this.props.removeTask(this.props.id)}>x</button>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport Task from './Task'\n\nexport default class extends Component {\n    state = {\n        newTaskName: '',\n        tasks: [],\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    addTask = () => {\n        if (this.state.newTaskName === '') return;\n        const newTask = {\n            name: this.state.newTaskName,\n            isDone: false,\n            id: Date.now()\n        };\n        this.setState({\n            tasks: [...this.state.tasks, newTask],\n            newTaskName: '',\n        })\n    }\n\n    toggleTask = id => {\n        this.setState({\n            tasks: this.state.tasks.map((task) => {\n                if (id === task.id)\n                    task.isDone = !task.isDone\n                return task\n            })\n        })\n    }\n\n    removeTask = id => this.setState({\n        tasks: this.state.tasks.filter((task) => task.id !== id)\n    })\n\n    clearDoneTasks = () => {\n        this.setState({\n            tasks: this.state.tasks.filter(task => !task.isDone)\n        })\n    }\n\n    render() {\n        return <div>\n            <div className='line'>\n                <input\n                    className='toDoList-newTaskName'\n                    name='newTaskName'\n                    value={this.state.newTaskName}\n                    placeholder='Add new task'\n                    type='text'\n                    onChange={this.handleChange}\n                >\n\n                </input>\n                <button className='leftButtons' onClick={this.addTask}>+</button>\n            </div>\n            <div className='toDoList-tasks'>{this.state.tasks.map((task) => <Task\n                toggleTask={this.toggleTask}\n                removeTask={this.removeTask}\n                key={task.id}\n                id={task.id}\n                task={task.name}></Task>)}</div>\n            <div className='line'>\n                <div>Tasks Left:{this.state.tasks.filter(task => !task.isDone).length}</div>\n                <button onClick={this.clearDoneTasks}>Clear Completed Tasks</button>\n            </div>\n        </div>\n    }\n}\n","import React from 'react';\nimport ToDoList from './components/ToDoList';\nimport './scss/main.scss';\n\nfunction App() {\n  return <div className='container'>\n    <div className='toDoList'>\n      <h1>To Do List</h1>\n      <ToDoList></ToDoList>\n    </div>\n  </div>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}